<Window x:Name="MyGame" x:Class="Arcane.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        WindowStyle="None"
        AllowsTransparency="True"
        xmlns:local="clr-namespace:Arcane"
        Title="Arcane" Height="690" Width="735" Closed="MyGame_Closed">

    <Window.Resources>
        <Style x:Key="WindowIconStyle"
               TargetType="{x:Type Hyperlink}">
            <Setter Property="FontFamily"
                    Value="Webdings" />
            <Setter Property="FontSize"
                    Value="16" />
            <Setter Property="TextBlock.TextDecorations"
                    Value="{x:Null}" />
            <Setter Property="Cursor"
                    Value="{x:Null}" />
            <Setter Property="Foreground"
                    Value="#ffff" />
        </Style>
    </Window.Resources>
    <Window.Background>
        <ImageBrush ImageSource="/DarkCorridorr.jpg"/>
    </Window.Background>

    <DockPanel>
        <DockPanel DockPanel.Dock="Top">
            <TextBlock DockPanel.Dock="Right"
                       VerticalAlignment="Center" Margin="0,0,12,0" Foreground="#FFE5DCDC">
                <Hyperlink Click="TriggerClose"
                           Style="{StaticResource WindowIconStyle}">r</Hyperlink>
            </TextBlock>
            <TextBlock DockPanel.Dock="Right"
                       VerticalAlignment="Center" Margin="0,0,29,0" Foreground="#FFE5DCDC">
                <Hyperlink Click="TriggerMinimize"
                           Style="{StaticResource WindowIconStyle}">0</Hyperlink>
            </TextBlock>
            <StatusBar Background="Transparent"
                       MouseDoubleClick="TriggerMaximize"
                       MouseMove="TriggerMoveWindow">
                <TextBlock DockPanel.Dock="Left"
                           Text="Arcane"
                           FontSize="16" Margin="9,0,0,0" Foreground="#FFE5DBDB"/>
            </StatusBar>
        </DockPanel>

        <Canvas x:Name="Background" Margin="0,-2,0,2">

            <!-- Col 1 -->

            <Image Height="662" Canvas.Left="2" Width="340" HorizontalAlignment="Center" VerticalAlignment="Center" Source="/LargeFrame.png" Stretch="Fill" Canvas.Top="-9">
                <Image.OpacityMask>
                    <ImageBrush ImageSource="/LargeFrame.png"/>
                </Image.OpacityMask>
            </Image>
            <Image x:Name="PlayerImg1" Height="147" Canvas.Left="20" Width="128" HorizontalAlignment="Left" VerticalAlignment="Center" Source="/PlayerFrameEmptypng.png" Stretch="Fill" Canvas.Top="37">
                <Image.OpacityMask>
                    <ImageBrush ImageSource="/PlayerFrameEmptypng.png"/>
                </Image.OpacityMask>
            </Image>
            <Label Content="Hit Points:" Canvas.Left="153" Canvas.Top="108" TextBlock.Foreground="#FFE5DBDB" FontFamily="Bookman Old Style" FontSize="14" Foreground="#FFA38149"/>
            <Label Content="Level:" Canvas.Left="153" Canvas.Top="54" HorizontalAlignment="Left" VerticalAlignment="Top" TextBlock.Foreground="#FFE5DBDB" FontFamily="Bookman Old Style" FontSize="14" Foreground="#FFA38149"/>
            <Label Content="Experience:" Canvas.Left="153" Canvas.Top="80" HorizontalAlignment="Left" VerticalAlignment="Top" TextBlock.Foreground="#FFE5DBDB" FontFamily="Bookman Old Style" FontSize="14" Foreground="#FFA38149"/>
            <Label Content="Gold:" Canvas.Left="153" Canvas.Top="134" HorizontalAlignment="Left" VerticalAlignment="Top" Background="{x:Null}" FontFamily="Bookman Old Style" FontSize="14" Foreground="#FFA38149"/>
            <Label x:Name="lbHitPoints" Canvas.Left="245" Canvas.Top="107" HorizontalAlignment="Left" VerticalAlignment="Top" Width="65" Height="28" Foreground="#FFA38149" FontFamily="Bookman Old Style" FontSize="16"/>
            <Label x:Name="lbLevel" Content="" Canvas.Left="245" Canvas.Top="53" Width="65" Height="28" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#FFA38149" FontFamily="Bookman Old Style" FontSize="16"/>
            <Label x:Name="lbExperience" Content="" Canvas.Left="245" Canvas.Top="79" Width="65" Height="28" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#FFA38149" FontFamily="Bookman Old Style" FontSize="16"/>
            <Label x:Name="lbGold" Content="" Canvas.Left="245" Canvas.Top="133" Width="65" Height="28" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#FFA38149" FontFamily="Bookman Old Style" FontSize="16"/>

            <Image Height="48" Canvas.Left="120" Canvas.Top="177" Width="130" HorizontalAlignment="Left" VerticalAlignment="Top" Source="/Button2.png" Stretch="Fill" RenderTransformOrigin="0.49,0.578">
                <Image.OpacityMask>
                    <ImageBrush ImageSource="/artwork (5).png"/>
                </Image.OpacityMask>
            </Image>

            <ToggleButton x:Name="btnMap" Content="Map" Canvas.Left="136.737" Canvas.Top="184.193" Width="102" Height="27"
                          Click="btnMap_Click" HorizontalAlignment="Left" VerticalAlignment="Top"
                          Background="{x:Null}" BorderBrush="#00707070" Foreground="#FFDAD9D6"
                          UseLayoutRounding="False" FontFamily="Bookman Old Style" FontSize="16" Cursor="Hand">
                <ToggleButton.Template>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                              Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </ToggleButton.Template>
                <ToggleButton.Style>
                    <Style TargetType="ToggleButton">
                        <Setter Property="Foreground" Value="#FFDAD9D6"/>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>




            <DataGrid x:Name="dgvInventory" Height="192" Width="272" Canvas.Top="239" Canvas.Left="35" CanUserSortColumns="True"
                      IsSynchronizedWithCurrentItem="True" IsReadOnly="True" HeadersVisibility="Column" SelectionMode="Single"
                      HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FFA9884B"
                      HorizontalGridLinesBrush="#FF4E4E4E" VerticalGridLinesBrush="#FF4E4E4E"
                     Sorting="dgvInventory_Sorting" Background="{x:Null}" BorderBrush="{x:Null}" FontFamily="Book Antiqua">
                <DataGrid.Resources>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Background" Value="#107d6a31"/>
                        <Setter Property="Foreground" Value="#FFA9884B"/>
                        <Setter Property="BorderBrush" Value="{x:Null}"/>
                        <Setter Property="IsHitTestVisible" Value="False"/>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="#FFA9884B" />
                        <!-- Set the desired background color -->
                        <Setter Property="Foreground" Value="White" />
                        <!-- Set the desired foreground color -->
                        <Setter Property="BorderBrush" Value="#FF4E4E4E" />
                        <!-- Set the desired border color -->
                        <Setter Property="BorderThickness" Value="0.5" />
                        <!-- Set the desired border thickness -->
                        <Setter Property="Padding" Value="6,4" />
                        <!-- Set the desired padding -->
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <!-- Set the desired content alignment -->
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <!-- Set the desired content alignment -->
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="#107d6a31"/>
                        <Setter Property="IsHitTestVisible" Value="False"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#107d6a31"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Description" Binding="{Binding Description}" Width="197"/>
                    <DataGridTextColumn Header="Quantity" Binding="{Binding Quantity}" Width="*"/>
                </DataGrid.Columns>
            </DataGrid>

            <DataGrid x:Name="dgvQuests" Height="127" Width="272" Canvas.Top="442" Canvas.Left="36" IsSynchronizedWithCurrentItem="True"
                      CanUserSortColumns="True" HorizontalAlignment="Left" VerticalAlignment="Center" IsReadOnly="True"
                      SelectionMode="Single" HeadersVisibility="Column" Background="#00000000"
                      Sorting="dgvQuests_Sorting" Foreground="#FFA9884B" BorderBrush="{x:Null}" HorizontalGridLinesBrush="#FF4E4E4E" VerticalGridLinesBrush="#FF4E4E4E" FontFamily="Book Antiqua">
                <DataGrid.Resources>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Background" Value="#107d6a31"/>
                        <Setter Property="Foreground" Value="#FFA9884B"/>
                        <Setter Property="BorderBrush" Value="{x:Null}"/>
                        <Setter Property="IsHitTestVisible" Value="False"/>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="#FFA9884B" />
                        <!-- Set the desired background color -->
                        <Setter Property="Foreground" Value="White" />
                        <!-- Set the desired foreground color -->
                        <Setter Property="BorderBrush" Value="#FF4E4E4E" />
                        <!-- Set the desired border color -->
                        <Setter Property="BorderThickness" Value="0.5" />
                        <!-- Set the desired border thickness -->
                        <Setter Property="Padding" Value="6,4" />
                        <!-- Set the desired padding -->
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <!-- Set the desired content alignment -->
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <!-- Set the desired content alignment -->
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="#107d6a31"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#107d6a31"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="185"/>
                    <DataGridTextColumn Header="IsCompleted" Binding="{Binding IsCompleted}" Width="*"/>
                </DataGrid.Columns>
            </DataGrid>





            <!-- Col 2 -->
            <Image Height="197" Canvas.Left="324" Canvas.Top="6" Width="396" HorizontalAlignment="Center" VerticalAlignment="Top" Source="/artwork (5).png" Stretch="Fill">
                <Image.OpacityMask>
                    <ImageBrush ImageSource="/artwork (5).png"/>
                </Image.OpacityMask>
            </Image>
            <RichTextBox x:Name="rtbLocation" Height="96" Width="275" Canvas.Top="53" Canvas.Left="392" IsReadOnly="True"
                         HorizontalAlignment="Left" VerticalAlignment="Center" Background="{x:Null}" 
                         BorderBrush="{x:Null}" SelectionBrush="{x:Null}" SelectionTextBrush="{x:Null}" Foreground="#FFA9884B" FontFamily="Book Antiqua" FontSize="16">
                <RichTextBox.Style>
                    <Style TargetType="RichTextBox">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="RichTextBox">
                                    <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}">
                                        <ScrollViewer x:Name="PART_ContentHost"
                                                      Background="{TemplateBinding Background}"
                                                      HorizontalScrollBarVisibility="Auto"
                                                      VerticalScrollBarVisibility="Auto"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </RichTextBox.Style>
                <FlowDocument>
                    <Paragraph>
                        <Run Text=""/>
                    </Paragraph>
                </FlowDocument>
            </RichTextBox>

            <Image Height="48" Canvas.Left="534" Canvas.Top="116" Width="130" Source="/Button2.png" Stretch="Fill" RenderTransformOrigin="0.49,0.578" HorizontalAlignment="Left" VerticalAlignment="Top">
                <Image.OpacityMask>
                    <ImageBrush ImageSource="/artwork (5).png"/>
                </Image.OpacityMask>
            </Image>
            <ToggleButton x:Name="btnTrade" Content="Trade" HorizontalAlignment="Left" VerticalAlignment="Top"
                          Width="116" Height="33" Click="btnTrade_Click" Canvas.Left="547" Canvas.Top="121"
                          Background="{x:Null}" BorderBrush="#00707070" Foreground="#FFDAD9D6"
                          UseLayoutRounding="False" FontFamily="Bookman Old Style" FontSize="16" Cursor="Hand">
                <ToggleButton.Template>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                              Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </ToggleButton.Template>
                <ToggleButton.Style>
                    <Style TargetType="ToggleButton">
                        <Setter Property="Foreground" Value="#FFDAD9D6"/>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>

            <Image Height="340" Canvas.Left="326" Canvas.Top="203" Width="396" HorizontalAlignment="Left" VerticalAlignment="Top" Source="/artwork (5).png" Stretch="Fill">
                <Image.OpacityMask>
                    <ImageBrush ImageSource="/artwork (5).png"/>
                </Image.OpacityMask>
            </Image>
            <RichTextBox x:Name="rtbMessages" Height="230" Width="320" Canvas.Top="257" Canvas.Left="370" IsReadOnly="True" HorizontalAlignment="Center" VerticalAlignment="Top" TextChanged="rtbMessages_TextChanged" Background="{x:Null}" BorderBrush="{x:Null}" SelectionTextBrush="{x:Null}" SelectionBrush="{x:Null}" Foreground="#FFA9884B" FontFamily="Book Antiqua" FontSize="16">
                <RichTextBox.Style>
                    <Style TargetType="RichTextBox">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="RichTextBox">
                                    <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}">
                                        <ScrollViewer x:Name="PART_ContentHost"
                                                      Background="{TemplateBinding Background}"
                                                      HorizontalScrollBarVisibility="Auto"
                                                      VerticalScrollBarVisibility="Auto"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </RichTextBox.Style>
                <FlowDocument>
                    <Paragraph AllowDrop="False">
                        <Run Text=""/>
                    </Paragraph>
                </FlowDocument>
            </RichTextBox>

            <Label Content="Select Action:" Canvas.Left="617" Canvas.Top="531"/>
            <Button x:Name="btnUseWeapon" Content="Attack" Canvas.Left="620" Canvas.Top="559" 
                    HorizontalAlignment="Left" VerticalAlignment="Center" Width="78"
                    Click="btnUseWeapon_Click" BorderBrush="#00707070" Foreground="#FFDAD9D6" 
                    UseLayoutRounding="False" FontFamily="Bookman Old Style" FontSize="16" Cursor="Hand" Background="#FFA38149"/>

            <Button x:Name="btnUsePotion" Content="Drink" Canvas.Left="620" Canvas.Top="593" Width="78" 
                    HorizontalAlignment="Center" VerticalAlignment="Center" Click="btnUsePotion_Click" BorderBrush="#00707070" Foreground="#FFDAD9D6" 
                    UseLayoutRounding="False" FontFamily="Bookman Old Style" FontSize="16" Cursor="Hand" Background="#FFA38149"/>

            <Button x:Name="btnNorth" Content="North" Canvas.Left="382" Canvas.Top="23" Height="20" 
                    Width="289" Click="btnNorth_Click" HorizontalAlignment="Left" VerticalAlignment="Top" 
                    Background="#FF3E3E3A" BorderBrush="#00707070" Foreground="#FFDAD9D6" 
                    UseLayoutRounding="False" FontFamily="Bookman Old Style" FontSize="16" Cursor="Hand"/>

            <Button x:Name="btnEast" Content="East" Canvas.Left="604" Canvas.Top="87" Height="27" Width="156"
                    HorizontalAlignment="Left" VerticalAlignment="Center" Click="btnEast_Click" 
                    RenderTransformOrigin="0.5,0.5" Background="#19DDDDDD" BorderBrush="#00707070" Foreground="#FFDAD9D6" 
                    UseLayoutRounding="False" FontFamily="Bookman Old Style" FontSize="16" Cursor="Hand">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-90"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>

            <Button x:Name="btnSouth" Content="South" Canvas.Left="382" Canvas.Top="158" Height="22" 
                    Width="289" HorizontalAlignment="Left" VerticalAlignment="Top" Click="btnSouth_Click" 
                    Background="#FF403F3B" BorderBrush="#00707070" Foreground="#FFDAD9D6" 
                    UseLayoutRounding="False" FontFamily="Bookman Old Style" FontSize="16" Cursor="Hand"/>

            <Button x:Name="btnWest" Content="West" Canvas.Left="290" Canvas.Top="83" Height="29" Width="161" Click="btnbtnWest_Click" 
                    RenderTransformOrigin="0.5,0.5" Background="#19DDDDDD" BorderBrush="#00707070" Foreground="#FFDAD9D6" 
                    UseLayoutRounding="False" FontFamily="Bookman Old Style" FontSize="16" Cursor="Hand" VerticalAlignment="Bottom" HorizontalAlignment="Left">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="90"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>



            <ComboBox x:Name="cboWeapons" DisplayMemberPath="Name" SelectedValuePath="ID" Canvas.Left="369" Canvas.Top="559" Width="227" IsDropDownOpen="False" HorizontalAlignment="Left" VerticalAlignment="Center" SelectionChanged="cboWeapons_SelectionChanged" BorderBrush="{x:Null}">
                <ComboBox.Resources>
                    <!-- Style for ComboBox ToggleButton -->
                    <Style TargetType="ToggleButton">
                        <Setter Property="Background" Value="#FFA9884B"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Style>
                </ComboBox.Resources>
                <ComboBox.Style>
                    <Style TargetType="ComboBox">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="#FFA9884B"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBox">
                                    <Grid>
                                        <ToggleButton x:Name="ToggleButton" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Focusable="False" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" HorizontalAlignment="Right" Margin="0,0,3,0" BorderBrush="{x:Null}">
                                            <ToggleButton.Content>
                                                <Path Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" Fill="{TemplateBinding Foreground}" />
                                            </ToggleButton.Content>
                                        </ToggleButton>
                                        <Border x:Name="Border" BorderBrush="#FFA9884B" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                            <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,0,30,0" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                        </Border>
                                        <TextBox x:Name="PART_EditableTextBox" Style="{StaticResource {x:Type TextBox}}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3,0,30,0" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                            <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Background="{TemplateBinding Background}">
                                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                                    <ItemsPresenter SnapsToDevicePixels="True" />
                                                </ScrollViewer>
                                            </Grid>
                                        </Popup>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                            <Setter TargetName="DropDown" Property="MinHeight" Value="95"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            <Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsGrouping" Value="True">
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                        </Trigger>
                                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                                            <Setter TargetName="DropDown" Property="Margin" Value="0,2,0,0"/>
                                        </Trigger>
                                        <Trigger Property="IsEditable" Value="True">
                                            <Setter Property="IsTabStop" Value="False"/>
                                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ComboBox.Style>
            </ComboBox>





            <ComboBox x:Name="cboPotions" DisplayMemberPath="Name" SelectedValuePath="ID" Canvas.Left="368" Canvas.Top="591" Width="228" IsDropDownOpen="False" HorizontalAlignment="Left" VerticalAlignment="Center" Background="{x:Null}" BorderBrush="#FFA38149" Foreground="#FFA38149">
                <ComboBox.Resources>
                    <!-- Style for ComboBox ToggleButton -->
                    <Style TargetType="ToggleButton">
                        <Setter Property="Background" Value="#FFA38149"/>
                        <Setter Property="Foreground" Value="#FFA38149"/>
                    </Style>
                </ComboBox.Resources>
                <ComboBox.Style>
                    <Style TargetType="ComboBox">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBox">
                                    <Grid>
                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                            <Grid>
                                                <ToggleButton x:Name="ToggleButton" Background="{TemplateBinding Background}"
                                                              BorderThickness="0" Focusable="False" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                              ClickMode="Press" HorizontalAlignment="Right" Margin="0,0,3,0">
                                                    <ToggleButton.Content>
                                                        <Path Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" Fill="{TemplateBinding Foreground}" />
                                                    </ToggleButton.Content>
                                                </ToggleButton>
                                                <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,0,30,0" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                            </Grid>
                                        </Border>
                                        <TextBox x:Name="PART_EditableTextBox" Style="{StaticResource {x:Type TextBox}}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3,0,30,0" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                            <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Background="{TemplateBinding Background}">
                                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                                    <ItemsPresenter SnapsToDevicePixels="True" />
                                                </ScrollViewer>
                                            </Grid>
                                        </Popup>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasItems" Value="False">
                                            <Setter TargetName="DropDown" Property="MinHeight" Value="95"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            <Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsGrouping" Value="True">
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                        </Trigger>
                                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                                            <Setter TargetName="DropDown" Property="Margin" Value="0,2,0,0"/>
                                        </Trigger>
                                        <Trigger Property="IsEditable" Value="True">
                                            <Setter Property="IsTabStop" Value="False"/>
                                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ComboBox.Style>
            </ComboBox>



        </Canvas>
    </DockPanel>
</Window>
